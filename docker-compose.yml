version: '3.8'

services:
    # DATABASE LOCAL DEVELOPMENT ONLY
    db:
        image: mysql
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./mysql:/var/lib/mysql
            - ./backup:/var/db
        # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
        # (this is just an example, not intended to be a production configuration)
        command:
          #      --default-authentication-plugin=mysql_native_password
            --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
        restart: always
        ports:
            - "3306:3306"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        env_file:
            - .env

    # PHP MY ADMIN
    phpmyadmin:
        image: phpmyadmin
        restart: always
        links:
            - db
        ports:
            - "8082:80"
        env_file:
            - .env

    # PHP_FPM APPLICATION CONTAINER
    php:
        build:
            context: .
            dockerfile: Dockerfile
        image: php:dev
        restart: on-failure
        env_file:
            - .env
        ports:
            - '8000:8000'
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            - db
        volumes:
            - .:/var/www:rw,cached

        # Vite development server
    vite:
        build:
            context: .
            dockerfile: Dockerfile_vite
        volumes:
            - .:/var/www
        working_dir: /var/www
        depends_on:
            - php
        ports:
            - '5173:5173'

    # MailCatcher
    mailcatcher:
        image: schickling/mailcatcher
        ports: [ '1025:1025', '1080:1080' ]

    redis:
        image: redis:4.0
        ports:
            - "6382:6379"
        extra_hosts:
            - "host.docker.internal:host-gateway"

        # Elasticsearch service
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "9200:9200"

